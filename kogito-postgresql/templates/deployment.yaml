apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kogito-app.fullname" . }}
  labels:
    {{- include "kogito-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kogito-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kogito-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kogito-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-postgres
        image: postgres
        command: ['sh', '-c', 'until pg_isready --host={{ include "kogito-app.postgresqlName" . }} --port=5432 --username=postgres; do echo waiting for postgresql; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              {{- if eq .Values.runtime "quarkus" }}
              path: /q/health/live
              {{- else if eq .Values.runtime "springboot" }}
              path: /actuator/health/liveness
              {{- end }}
              port: http
          readinessProbe:
            httpGet:
              {{- if eq .Values.runtime "quarkus" }}
              path: /q/health/ready
              {{- else if eq .Values.runtime "springboot" }}
              path: /actuator/health/readiness
              {{- end }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Values.postgresqlConfigMap }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
